const {useState} = React;

function MarkdownApp() {
  // Declare a new state variable, which we'll call "count"
  const [markdown, setMarkdown] = useState(`# Welcome to my React Markdown Previewer!

## This is a sub-heading...
### And here's some other cool stuff:

Heres some code, \`<div></div>\`, between 2 backticks.

\`\`\`
// this is multi-line code:

function anotherExample(firstLine, lastLine) {
  if (firstLine == '\`\`\`' && lastLine == '\`\`\`') {
    return multiLineCode;
  }
}
\`\`\`

You can also make text **bold**... whoa!
Or _italic_.
Or... wait for it... **_both!_**
And feel free to go crazy ~~crossing stuff out~~.

There's also [links](https://www.freecodecamp.com), and
> Block Quotes!

And if you want to get really crazy, even tables:

Wild Header | Crazy Header | Another Header?
------------ | ------------- | -------------
Your content can | be here, and it | can be here....
And here. | Okay. | I think we get it.

- And of course there are lists.
  - Some are bulleted.
     - With different indentation levels.
        - That look like this.


1. And there are numbererd lists too.
1. Use just 1s if you want!
1. And last but not least, let's not forget embedded images:

![React Logo w/ Text](https://goo.gl/Umyytc)
`);


  return (
    <div>
      <h1 class="heading text-center">Markdown Previewer</h1>
      <div id="main">
        
        <div class="edit-container">   
          <div class='edit-header'>
              <h5>Editor</h5>
          </div>
          <textArea id="editor"
                    onChange={(e) => setMarkdown(e.target.value)}>{markdown}
          </textArea>
       </div>
       
        <div>
          <div class='preview-header'>
              <h5>Previewer</h5>
          </div>
          <Previewer markdown={markdown} />
        </div>
        
      </div> 
    </div>    
  );
}

function Previewer(props) {
  
  marked.setOptions({
    renderer: new marked.Renderer(),
    gfm: true,
    breaks: true
 });
   
//  let clean = DOMPurify.sanitize(dangerouslySetInnerHTML.__html);
    return (
      <div>
        
        <div id="preview" 
          dangerouslySetInnerHTML={{
        __html: marked(props.markdown)
      }}
        />
          
      </div>  
      
    );
} 

ReactDOM.render(<MarkdownApp />,
               document.getElementById("root"));